[TRACE] Starting createEntityManagerFactory for persistenceUnitName labPU
[TRACE] Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : labPU
[TRACE] Attempting to parse persistence.xml file : file:/C:/Users/kamil/Desktop/IORIRO/HiberLab2024/IOR%20NAjnowszy/build/classes/META-INF/persistence.xml
[TRACE] JAR URL from URL Entry: file:/C:/Users/kamil/Desktop/IORIRO/HiberLab2024/IOR%20NAjnowszy/build/classes/META-INF/persistence.xml >> file:/C:/Users/kamil/Desktop/IORIRO/HiberLab2024/IOR%20NAjnowszy/build/classes
[TRACE] Persistence unit name from persistence.xml : labPU
[DEBUG] Located and parsed 1 persistence units; checking each
[DEBUG] Checking persistence-unit [name=labPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [labPU]
[DEBUG] Persistence-unit [labPU] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[TRACE] Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
[DEBUG] PersistenceUnitInfo [
	name: labPU
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/kamil/Desktop/IORIRO/HiberLab2024/IOR%20NAjnowszy/build/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		model.Player
		model.Team
		model.Match
		model.Position
		model.Stadium
		model.Coach
		model.Person]
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: 
		hibernate.ejb.cfgfile: hibernate.cfg.xml
		jakarta.persistence.schema-generation.database.action: drop-and-create
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost:3306/hib24
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteInsertStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableInsertStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableInsertStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableInsertStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableInsertStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [cte] -> [org.hibernate.query.sqm.mutation.internal.cte.CteMutationStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [global_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.GlobalTemporaryTableMutationStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [local_temporary] -> [org.hibernate.query.sqm.mutation.internal.temptable.LocalTemporaryTableMutationStrategy]
[TRACE] Registering named strategy selector [org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategy] : [persistent] -> [org.hibernate.query.sqm.mutation.internal.temptable.PersistentTableMutationStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [standard] -> [org.hibernate.id.enhanced.StandardNamingStrategy]
[TRACE] Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [single] -> [org.hibernate.id.enhanced.SingleNamingStrategy]
[TRACE] Registering named strategy selector [org.hibernate.id.enhanced.ImplicitDatabaseObjectNamingStrategy] : [legacy] -> [org.hibernate.id.enhanced.LegacyNamingStrategy]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [default] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyStandard]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.relational.ColumnOrderingStrategy] : [legacy] -> [org.hibernate.boot.model.relational.ColumnOrderingStrategyLegacy]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
[TRACE] Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson] -> [org.hibernate.type.format.jackson.JacksonJsonFormatMapper]
[TRACE] Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jsonb] -> [org.hibernate.type.format.jakartajson.JsonBJsonFormatMapper]
[TRACE] Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jackson-xml] -> [org.hibernate.type.format.jackson.JacksonXmlFormatMapper]
[TRACE] Registering named strategy selector [org.hibernate.type.format.FormatMapper] : [jaxb] -> [org.hibernate.type.format.jaxb.JaxbXmlFormatMapper]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate ORM core version 6.5.2.Final
[DEBUG] HHH000206: 'hibernate.properties' not found
[TRACE] Initializing service [role=org.hibernate.id.factory.IdentifierGeneratorFactory]
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[DEBUG] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] HHH000026: Second-level cache disabled
[TRACE] SqmFunctionRegistry created
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[DEBUG] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@231f98ef] into BootstrapContext; was [null]
[DEBUG] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c137fd5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@183ec003]
[DEBUG] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: null at URL: jdbc:mysql://localhost:3306/hib24
[INFO ] HHH10001001: Connection properties: {password=****, user=root}
[INFO ] HHH10001003: Autocommit mode: false
[WARN ] HHH10001006: No JDBC Driver class was specified by property `jakarta.persistence.jdbc.driver`, `hibernate.driver` or `javax.persistence.jdbc.driver`
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[DEBUG] Database ->
	   name : MySQL
	version : 8.0.39
	  major : 8
	  minor : 0
[DEBUG] Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
[DEBUG] JDBC version : 4.2
[DEBUG] HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 8.0.39
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[TRACE] Normalizing identifier quoting [hib24]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.SqlStatementLogger]
[TRACE] Initializing service [role=org.hibernate.sql.ast.spi.ParameterMarkerStrategy]
[TRACE] Starting AttributeConverterManager#addConverter : `goodies.BooleanConverter`
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
[DEBUG] Binding entity from annotated class: model.Match
[DEBUG] Import with entity name Match
[TRACE] Import: Match -> model.Match
[TRACE] Import: model.Match -> model.Match
[TRACE] Normalizing identifier quoting [MATCHES]
[TRACE] Normalizing identifier quoting [MATCHES]
[DEBUG] Bind entity model.Match on table MATCHES
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[TRACE] Processing annotations of model.Match.id
[TRACE] Normalizing identifier quoting [MATCH_ID]
[TRACE] Normalizing identifier quoting [MATCH_ID]
[DEBUG] Binding column: AnnotatedColumn(column='MATCH_ID')
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Match:id]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Match.id (type=int)
[DEBUG] building BasicValue for id
[DEBUG] Skipping column re-registration: MATCHES.MATCH_ID
[TRACE] Normalizing identifier quoting [MATCH_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(BasicValue([Column(MATCH_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Match.awayTeam
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='AWAY_TEAM_ID')
[TRACE] Normalizing identifier quoting [awayTeam]
[TRACE] Normalizing identifier quoting [awayTeam]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] Building property awayTeam
[TRACE] Cascading awayTeam with none
[TRACE] Processing annotations of model.Match.date
[TRACE] Normalizing identifier quoting [MATCH_DATE]
[TRACE] Normalizing identifier quoting [MATCH_DATE]
[DEBUG] Binding column: AnnotatedColumn(column='MATCH_DATE')
[DEBUG] MetadataSourceProcessor property date with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Match:date]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Match.date (type=java.time.LocalDate)
[DEBUG] building BasicValue for date
[DEBUG] Skipping column re-registration: MATCHES.MATCH_DATE
[TRACE] Normalizing identifier quoting [MATCH_DATE]
[DEBUG] Building property date
[TRACE] Cascading date with null
[TRACE] Processing annotations of model.Match.homeTeam
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='HOME_TEAM_ID')
[TRACE] Normalizing identifier quoting [homeTeam]
[TRACE] Normalizing identifier quoting [homeTeam]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] Building property homeTeam
[TRACE] Cascading homeTeam with none
[TRACE] Processing annotations of model.Match.result
[TRACE] Normalizing identifier quoting [result]
[TRACE] Normalizing identifier quoting [result]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property result with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Match:result]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Match.result (type=java.lang.String)
[DEBUG] building BasicValue for result
[DEBUG] Skipping column re-registration: MATCHES.result
[TRACE] Normalizing identifier quoting [result]
[TRACE] Normalizing identifier quoting [result]
[TRACE] Normalizing identifier quoting [result]
[DEBUG] Building property result
[TRACE] Cascading result with null
[TRACE] Processing annotations of model.Match.stadium
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='STADIUM_ID')
[TRACE] Normalizing identifier quoting [stadium]
[TRACE] Normalizing identifier quoting [stadium]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] Building property stadium
[TRACE] Cascading stadium with none
[DEBUG] HHH000194: Package not found or no package-info.java: model
[DEBUG] Binding entity from annotated class: model.Team
[DEBUG] Import with entity name Team
[TRACE] Import: Team -> model.Team
[TRACE] Import: model.Team -> model.Team
[TRACE] Normalizing identifier quoting [TEAMS]
[TRACE] Normalizing identifier quoting [TEAMS]
[DEBUG] Bind entity model.Team on table TEAMS
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[TRACE] Processing annotations of model.Team.id
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Binding column: AnnotatedColumn(column='TEAM_ID')
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:id]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Team.id (type=int)
[DEBUG] building BasicValue for id
[DEBUG] Skipping column re-registration: TEAMS.TEAM_ID
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(BasicValue([Column(TEAM_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Team.country
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property country with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:country]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Team.country (type=java.lang.String)
[DEBUG] building BasicValue for country
[DEBUG] Skipping column re-registration: TEAMS.country
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[TRACE] Normalizing identifier quoting [country]
[DEBUG] Building property country
[TRACE] Cascading country with null
[TRACE] Processing annotations of model.Team.matches
[TRACE] Normalizing identifier quoting [matches]
[TRACE] Normalizing identifier quoting [matches]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property matches with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:matches]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Team.matches (type=java.util.Set)
[DEBUG] building BasicValue for matches
[DEBUG] Skipping column re-registration: TEAMS.matches
[TRACE] Normalizing identifier quoting [matches]
[TRACE] Normalizing identifier quoting [matches]
[TRACE] Normalizing identifier quoting [matches]
[DEBUG] Building property matches
[TRACE] Cascading matches with null
[TRACE] Processing annotations of model.Team.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:name]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Team.name (type=java.lang.String)
[DEBUG] building BasicValue for name
[DEBUG] Skipping column re-registration: TEAMS.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model.Team.players
[DEBUG] Binding column: AnnotatedJoinColumn()
[TRACE] Normalizing identifier quoting [players]
[TRACE] Normalizing identifier quoting [players]
[DEBUG] Binding column: AnnotatedColumn()
[TRACE] Normalizing identifier quoting [players_ORDER]
[DEBUG] Binding column: IndexColumn(column='players_ORDER')
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: AnnotatedColumn()
[TRACE] Normalizing identifier quoting [players_KEY]
[DEBUG] Binding column: AnnotatedColumn(column='players_KEY')
[TRACE] Normalizing identifier quoting [players_KEY]
[DEBUG] Binding column: AnnotatedJoinColumn(column='players_KEY')
[DEBUG] Binding column: AnnotatedJoinColumn()
[DEBUG] Binding column: AnnotatedJoinColumn()
[DEBUG] Collection role: model.Team.players
[DEBUG] Building property players
[TRACE] Cascading players with none
[DEBUG] HHH000194: Package not found or no package-info.java: model
[DEBUG] Binding entity from annotated class: model.Person
[DEBUG] Import with entity name Person
[TRACE] Import: Person -> model.Person
[TRACE] Import: model.Person -> model.Person
[TRACE] Normalizing identifier quoting [PERSONS]
[TRACE] Normalizing identifier quoting [PERSONS]
[DEBUG] Bind entity model.Person on table PERSONS
[TRACE] Processing annotations of model.Person.id
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[DEBUG] Binding column: AnnotatedColumn(column='PER_ID')
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:id]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Person.id (type=int)
[DEBUG] building BasicValue for id
[DEBUG] Skipping column re-registration: PERSONS.PER_ID
[TRACE] Normalizing identifier quoting [PER_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(BasicValue([Column(PER_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Person.birthDate
[TRACE] Normalizing identifier quoting [BIRTH_DATE]
[TRACE] Normalizing identifier quoting [BIRTH_DATE]
[DEBUG] Binding column: AnnotatedColumn(column='BIRTH_DATE')
[DEBUG] MetadataSourceProcessor property birthDate with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:birthDate]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Person.birthDate (type=java.time.LocalDate)
[DEBUG] building BasicValue for birthDate
[DEBUG] Skipping column re-registration: PERSONS.BIRTH_DATE
[TRACE] Normalizing identifier quoting [BIRTH_DATE]
[DEBUG] Building property birthDate
[TRACE] Cascading birthDate with null
[TRACE] Processing annotations of model.Person.firstName
[TRACE] Normalizing identifier quoting [FIRST_NAME]
[TRACE] Normalizing identifier quoting [FIRST_NAME]
[DEBUG] Binding column: AnnotatedColumn(column='FIRST_NAME')
[DEBUG] MetadataSourceProcessor property firstName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:firstName]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Person.firstName (type=java.lang.String)
[DEBUG] building BasicValue for firstName
[DEBUG] Skipping column re-registration: PERSONS.FIRST_NAME
[TRACE] Normalizing identifier quoting [FIRST_NAME]
[DEBUG] Building property firstName
[TRACE] Cascading firstName with null
[TRACE] Processing annotations of model.Person.lastName
[TRACE] Normalizing identifier quoting [LAST_NAME]
[TRACE] Normalizing identifier quoting [LAST_NAME]
[DEBUG] Binding column: AnnotatedColumn(column='LAST_NAME')
[DEBUG] MetadataSourceProcessor property lastName with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:lastName]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Person.lastName (type=java.lang.String)
[DEBUG] building BasicValue for lastName
[DEBUG] Skipping column re-registration: PERSONS.LAST_NAME
[TRACE] Normalizing identifier quoting [LAST_NAME]
[DEBUG] Building property lastName
[TRACE] Cascading lastName with null
[DEBUG] HHH000194: Package not found or no package-info.java: model
[DEBUG] Binding entity from annotated class: model.Player
[DEBUG] Import with entity name Player
[TRACE] Import: Player -> model.Player
[TRACE] Import: model.Player -> model.Player
[TRACE] Normalizing identifier quoting [PLAYERS]
[TRACE] Normalizing identifier quoting [PLAYERS]
[DEBUG] Bind entity model.Player on table PLAYERS
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='PLAYER_ID')
[TRACE] Subclass joined column(s) created
[TRACE] Processing annotations of model.Player.number
[TRACE] Normalizing identifier quoting [number]
[TRACE] Normalizing identifier quoting [number]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property number with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Player:number]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Player.number (type=int)
[DEBUG] building BasicValue for number
[DEBUG] Skipping column re-registration: PLAYERS.number
[TRACE] Normalizing identifier quoting [number]
[TRACE] Normalizing identifier quoting [number]
[TRACE] Normalizing identifier quoting [number]
[DEBUG] Building property number
[TRACE] Cascading number with null
[TRACE] Processing annotations of model.Player.position
[TRACE] Normalizing identifier quoting [position]
[TRACE] Normalizing identifier quoting [position]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property position with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Player:position]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Player.position (type=java.lang.String)
[DEBUG] building BasicValue for position
[DEBUG] Skipping column re-registration: PLAYERS.position
[TRACE] Normalizing identifier quoting [position]
[TRACE] Normalizing identifier quoting [position]
[TRACE] Normalizing identifier quoting [position]
[DEBUG] Building property position
[TRACE] Cascading position with null
[TRACE] Processing annotations of model.Player.positions
[TRACE] Normalizing identifier quoting [positions_ORDER]
[DEBUG] Binding column: IndexColumn(column='positions_ORDER')
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: AnnotatedColumn()
[TRACE] Normalizing identifier quoting [positions_KEY]
[DEBUG] Binding column: AnnotatedColumn(column='positions_KEY')
[TRACE] Normalizing identifier quoting [positions_KEY]
[DEBUG] Binding column: AnnotatedJoinColumn(column='positions_KEY')
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='PLAYER_ID')
[TRACE] Normalizing identifier quoting [POSITION_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='POSITION_ID')
[DEBUG] Collection role: model.Player.positions
[DEBUG] Building property positions
[TRACE] Cascading positions with none
[TRACE] Processing annotations of model.Player.team
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='TEAM_ID')
[TRACE] Normalizing identifier quoting [team]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] Building property team
[TRACE] Cascading team with none
[DEBUG] Binding entity from annotated class: model.Stadium
[DEBUG] Import with entity name Stadium
[TRACE] Import: Stadium -> model.Stadium
[TRACE] Import: model.Stadium -> model.Stadium
[TRACE] Normalizing identifier quoting [STADIUMS]
[TRACE] Normalizing identifier quoting [STADIUMS]
[DEBUG] Bind entity model.Stadium on table STADIUMS
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[TRACE] Processing annotations of model.Stadium.id
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[DEBUG] Binding column: AnnotatedColumn(column='STADIUM_ID')
[DEBUG] Not known whether passed class name [model.Stadium] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Stadium
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Stadium:id]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Stadium.id (type=int)
[DEBUG] building BasicValue for id
[DEBUG] Skipping column re-registration: STADIUMS.STADIUM_ID
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[DEBUG] Building property id
[TRACE] Cascading id with null
[DEBUG] #makeIdGenerator(BasicValue([Column(STADIUM_ID)]), id, identity, , ...)
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Stadium.location
[TRACE] Normalizing identifier quoting [LOCATION]
[TRACE] Normalizing identifier quoting [LOCATION]
[DEBUG] Binding column: AnnotatedColumn(column='LOCATION')
[DEBUG] MetadataSourceProcessor property location with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Stadium:location]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Stadium.location (type=java.lang.String)
[DEBUG] building BasicValue for location
[DEBUG] Skipping column re-registration: STADIUMS.LOCATION
[TRACE] Normalizing identifier quoting [LOCATION]
[DEBUG] Building property location
[TRACE] Cascading location with null
[TRACE] Processing annotations of model.Stadium.name
[TRACE] Normalizing identifier quoting [NAME]
[TRACE] Normalizing identifier quoting [NAME]
[DEBUG] Binding column: AnnotatedColumn(column='NAME')
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Stadium:name]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Stadium.name (type=java.lang.String)
[DEBUG] building BasicValue for name
[DEBUG] Skipping column re-registration: STADIUMS.NAME
[TRACE] Normalizing identifier quoting [NAME]
[DEBUG] Building property name
[TRACE] Cascading name with null
[DEBUG] HHH000194: Package not found or no package-info.java: model
[DEBUG] Binding entity from annotated class: model.Coach
[DEBUG] Import with entity name Coach
[TRACE] Import: Coach -> model.Coach
[TRACE] Import: model.Coach -> model.Coach
[TRACE] Normalizing identifier quoting [COACHES]
[TRACE] Normalizing identifier quoting [COACHES]
[DEBUG] Bind entity model.Coach on table COACHES
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='PER_ID')
[TRACE] Subclass joined column(s) created
[TRACE] Processing annotations of model.Coach.team
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='TEAM_ID')
[TRACE] Normalizing identifier quoting [team]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] Building property team
[TRACE] Cascading team with none
[DEBUG] Binding entity from annotated class: model.Position
[DEBUG] Import with entity name Position
[TRACE] Import: Position -> model.Position
[TRACE] Import: model.Position -> model.Position
[TRACE] Normalizing identifier quoting [POSITIONS]
[TRACE] Normalizing identifier quoting [POSITIONS]
[DEBUG] Bind entity model.Position on table POSITIONS
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[DEBUG] Binding column: AnnotatedJoinColumn(column='POS_ID')
[TRACE] Subclass joined column(s) created
[TRACE] Processing annotations of model.Position.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: AnnotatedColumn()
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Position:name]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Position.name (type=java.lang.String)
[DEBUG] building BasicValue for name
[DEBUG] Skipping column re-registration: POSITIONS.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model.Position.time
[TRACE] Normalizing identifier quoting [TIME_PLAYED]
[TRACE] Normalizing identifier quoting [TIME_PLAYED]
[DEBUG] Binding column: AnnotatedColumn(column='TIME_PLAYED')
[DEBUG] MetadataSourceProcessor property time with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Position:time]
[DEBUG] Checking auto-apply AttributeConverter [goodies.BooleanConverter] (domain-type=Ljava/lang/Boolean;) for match against basic attribute : model.Position.time (type=int)
[DEBUG] building BasicValue for time
[DEBUG] Skipping column re-registration: POSITIONS.TIME_PLAYED
[TRACE] Normalizing identifier quoting [TIME_PLAYED]
[DEBUG] Building property time
[TRACE] Cascading time with null
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for date
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for result
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for country
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for matches
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for birthDate
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for firstName
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for lastName
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for number
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for position
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for location
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] Starting `BasicValueBinder#fillSimpleValue` for time
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PERSONS]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Forcing column [match_id] to be non-null as it is part of the primary key for table [matches]
[DEBUG] Forcing column [team_id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] Forcing column [per_id] to be non-null as it is part of the primary key for table [persons]
[DEBUG] Forcing column [player_id] to be non-null as it is part of the primary key for table [players]
[DEBUG] Forcing column [stadium_id] to be non-null as it is part of the primary key for table [stadiums]
[DEBUG] Forcing column [per_id] to be non-null as it is part of the primary key for table [coaches]
[DEBUG] Forcing column [pos_id] to be non-null as it is part of the primary key for table [positions]
[DEBUG] Second pass for collection: model.Player.positions
[DEBUG] Binding a ManyToMany: model.Player.positions
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [PLAYER_POSITION]
[TRACE] Normalizing identifier quoting [PLAYER_POSITION]
[DEBUG] HHH000194: Package not found or no package-info.java: model
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POSITION_ID]
[TRACE] Normalizing identifier quoting [POSITION_ID]
[TRACE] Normalizing identifier quoting [POSITION_ID]
[DEBUG] Forcing column [player_id] to be non-null as it is part of the primary key for table [player_position]
[DEBUG] Forcing column [position_id] to be non-null as it is part of the primary key for table [player_position]
[DEBUG] Mapped collection key: PLAYER_ID, element: POSITION_ID
[DEBUG] Second pass for collection: model.Team.players
[DEBUG] Binding a OneToMany: model.Team.players through a foreign key
[DEBUG] Mapping collection: model.Team.players -> PLAYERS
[DEBUG] Retrieving property model.Player.team
[TRACE] Normalizing identifier quoting [TEAM_ID]
[DEBUG] Mapped collection key: TEAM_ID, one-to-many: model.Player
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [FKirex8rtcuj9okh5ltqy1l27c0]
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POSITION_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [PER_ID]
[TRACE] Normalizing identifier quoting [AWAY_TEAM_ID]
[TRACE] Normalizing identifier quoting [HOME_TEAM_ID]
[TRACE] Normalizing identifier quoting [STADIUM_ID]
[TRACE] Normalizing identifier quoting [TEAM_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POSITION_ID]
[TRACE] Normalizing identifier quoting [PLAYER_ID]
[TRACE] Normalizing identifier quoting [POS_ID]
[TRACE] Initializing service [role=org.hibernate.boot.spi.SessionFactoryBuilderService]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
[DEBUG] Building session factory
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[DEBUG] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, java.class.path=C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\FastInfoset-1.2.15.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\c3p0-0.9.5.3.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\classmate-1.5.1.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\dom4j-2.1.3.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-ant-6.5.2.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-c3p0-6.5.2.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-core-6.5.2.Final-javadoc.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-core-6.5.2.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-core-jakarta-6.0.0.Alpha9.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-entitymanager-6.0.0.Alpha7.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-jpamodelgen-6.5.2.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\istack-commons-runtime-3.0.7.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\javassist-3.24.0-GA.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jaxb-api-2.3.1.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jaxb-runtime-2.3.1.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jboss-logging-3.3.2.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\log4j-1.2.16.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\mchange-commons-java-0.2.15.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\slf4j-api-1.7.7.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\slf4j-log4j12-1.7.7.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\stax-ex-1.8.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\txw2-2.3.1.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jakarta.persistence-api-3.2.0.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\antlr-3.5.3.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jakarta.transaction-api-2.0.1.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jandex-3.2.0.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\byte-buddy-1.14.9.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\mysql-connector-j-8.0.33.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jboss-transaction-3.2.3.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jakarta.xml.bind-api-4.0.2.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jakarta.persistence-api-3.2.0-javadoc.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\jandex-2.1.3.Final.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\lib\antlr4-runtime-4.13.0.jar;C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Warsaw, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/hib24, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=PL, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk-17.0.4.1\bin, sun.java.command=hiberApp.MainAppInit, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\kamil, user.language=pl, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy\build\classes, java.version.date=2022-08-18, java.home=C:\Program Files\Java\jdk-17.0.4.1, hibernate.ejb.cfgfile=hibernate.cfg.xml, file.separator=\, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=labPU, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, jakarta.persistence.schema-generation.database.action=drop-and-create, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.4.1+1-LTS-2, user.name=kamil, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/hib24, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\kamil\AppData\Local\Temp\, java.version=17.0.4.1, user.dir=C:\Users\kamil\Desktop\IORIRO\HiberLab2024\IOR NAjnowszy, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/hib24, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@261ea657, native.encoding=Cp1250, java.library.path=C:\Program Files\Java\jdk-17.0.4.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\VMware\VMware Player\bin\;C:\Program Files\Microsoft\jdk-11.0.12.7-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\Microchip\xc8\v2.36\bin;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Azure Data Studio\bin;C:\Program Files (x86)\Microchip\MPLAB C32 Suite\bin;C;C:\Program Files\Git\cmd;C:\MinGW\bin;C:\Program Files\MATLAB\R2024a\runtime\win64;C:\Program Files\MATLAB\R2024a\bin;C:\Users\kamil\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\kamil\AppData\Local\Programs\Python\Python312\;C:\Users\kamil\AppData\Local\Programs\Python\Launcher\;C:\Users\kamil\AppData\Local\Microsoft\WindowsApps;C:\Users\kamil\.dotnet\tools;C:\Program Files\Azure Data Studio\bin;C:\Users\kamil\AppData\Local\Programs\MiKTeX\miktex\bin\x64\;C:\Program Files\JetBrains\PyCharm Community Edition 2024.2.3\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.4.1+1-LTS-2, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
[TRACE] Normalizing identifier quoting [null]
[TRACE] Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2b6fcb9f] under count; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@12d5c30e] under every; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@b887730] under any; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@100c8b75] under sinh; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bc378f7] under cosh; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@268cbb86] under tanh; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f7918f] under pi; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64d4f7c7] under log; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] Registering alternate key : length -> character_length
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@46a145ba] under position; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6812fa3a] under overlay; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@173a6728] under trim; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@34780cd9] under cast; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@623ebac7] under collate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@79a04e5f] under extract; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3f1ed068] under ifnull; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e1e9ef3] under pad; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@58434b19] under str; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5cf3157b] under format; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5a08efdc] under timestampadd; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@984169e] under timestampdiff; prior registration was null
[DEBUG] Registering alternate key : dateadd -> timestampadd
[DEBUG] Registering alternate key : datediff -> timestampdiff
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7544ac86] under current_date; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b27b497] under current_time; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b1534d3] under current_timestamp; prior registration was null
[DEBUG] Registering alternate key : current date -> current_date
[DEBUG] Registering alternate key : current time -> current_time
[DEBUG] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c74aa0d] under local_date; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c841199] under local_time; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a818392] under local_datetime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@489091bd] under offset_datetime; prior registration was null
[DEBUG] Registering alternate key : local date -> local_date
[DEBUG] Registering alternate key : local time -> local_time
[DEBUG] Registering alternate key : local datetime -> local_datetime
[DEBUG] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@512d6e60] under instant; prior registration was null
[DEBUG] Registering alternate key : current_instant -> instant
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@d277579] under sql; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64d4f7c7
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2cc75074] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@445bb139] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] Registering alternate key : day -> dayofmonth
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b9a77c8] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@46a145ba
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a8b9166] under trunc; prior registration was null
[DEBUG] Registering alternate key : truncate -> trunc
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4acc5dff] under bitand; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10c72a6f] under bitor; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70e94ecb] under bitxor; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56cfe111] under bitnot; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7e446d92] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5cf3157b
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6c841199
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6a818392
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57f9b467] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f7918f
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d5c2745] under chr; prior registration was null
[DEBUG] Registering alternate key : char -> chr
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44b29496] under sysdate; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@71e4b308] under rank; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@11900483] under dense_rank; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@14a049f9] under percent_rank; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@94e51e8] under cume_dist; prior registration was null
[DEBUG] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@2100d047] under listagg; prior registration was null
[DEBUG] abs(NUMERIC arg)
[DEBUG] Double acos(NUMERIC arg)
[DEBUG] adddate(DATE datetime, INTEGER days)
[DEBUG] addtime(TIME datetime, TIME time)
[DEBUG] Boolean any(BOOLEAN arg)
[DEBUG] Integer ascii(STRING arg)
[DEBUG] Double asin(NUMERIC arg)
[DEBUG] Double atan(NUMERIC arg)
[DEBUG] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] avg(arg)
[DEBUG] bit_and(arg)
[DEBUG] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] bit_or(arg)
[DEBUG] bitand(arg0, arg1)
[DEBUG] bitnot(arg)
[DEBUG] bitor(arg0, arg1)
[DEBUG] bitxor(arg0, arg1)
[DEBUG] cast(arg as Type)
[DEBUG] ceiling(NUMERIC arg)
[DEBUG] Character char(INTEGER arg)
[DEBUG] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] Character chr(INTEGER arg)
[DEBUG] coalesce(arg0[, arg1[, ...]])
[DEBUG] String collate(STRING string as COLLATION collation)
[DEBUG] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] Double cos(NUMERIC arg)
[DEBUG] Double cosh(NUMERIC arg)
[DEBUG] Double cot(NUMERIC arg)
[DEBUG] Long count([distinct ]{arg|*})
[DEBUG] Integer crc32(arg)
[DEBUG] Double cume_dist([arg0[, ...]])
[DEBUG] Date curdate()
[DEBUG] Date current date
[DEBUG] Time current time
[DEBUG] Timestamp current timestamp
[DEBUG] Date current_date
[DEBUG] Instant current_instant
[DEBUG] Time current_time
[DEBUG] Timestamp current_timestamp
[DEBUG] Time curtime()
[DEBUG] Date date(arg)
[DEBUG] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] Integer datediff(DATE end, DATE start)
[DEBUG] Integer day(DATE arg)
[DEBUG] String dayname(DATE arg)
[DEBUG] Integer dayofmonth(DATE arg)
[DEBUG] Integer dayofweek(DATE arg)
[DEBUG] Integer dayofyear(DATE arg)
[DEBUG] Double degrees(NUMERIC arg)
[DEBUG] Long dense_rank([arg0[, ...]])
[DEBUG] Boolean every(BOOLEAN arg)
[DEBUG] Double exp(NUMERIC arg)
[DEBUG] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] first_valueANY value
[DEBUG] floor(NUMERIC arg)
[DEBUG] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] Integer hour(TIME arg)
[DEBUG] ifnull(arg0, arg1)
[DEBUG] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] Instant instant
[DEBUG] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] Date last_day(DATE arg)
[DEBUG] last_valueANY value
[DEBUG] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] String left(STRING string, INTEGER length)
[DEBUG] Integer length(STRING_OR_CLOB arg)
[DEBUG] String listagg(STRING arg0, STRING arg1)
[DEBUG] Double ln(NUMERIC arg)
[DEBUG] LocalDate local date
[DEBUG] LocalDateTime local datetime
[DEBUG] LocalTime local time
[DEBUG] LocalDate local_date
[DEBUG] LocalDateTime local_datetime
[DEBUG] LocalTime local_time
[DEBUG] Timestamp localtime
[DEBUG] Timestamp localtimestamp
[DEBUG] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] Double log10(NUMERIC arg)
[DEBUG] Double log2(NUMERIC arg)
[DEBUG] String lower(STRING string)
[DEBUG] String lpad(string, length[, padding])
[DEBUG] String ltrim(STRING string[, STRING characters])
[DEBUG] Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] max(COMPARABLE arg)
[DEBUG] String md5(arg)
[DEBUG] Integer microsecond(TIME arg)
[DEBUG] min(COMPARABLE arg)
[DEBUG] Integer minute(TIME arg)
[DEBUG] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] Integer month(DATE arg)
[DEBUG] String monthname(DATE arg)
[DEBUG] Timestamp now()
[DEBUG] nth_valueANY value, INTEGER nth
[DEBUG] nullif(arg0, arg1)
[DEBUG] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] OffsetDateTime offset datetime
[DEBUG] OffsetDateTime offset_datetime
[DEBUG] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] Double percent_rank([arg0[, ...]])
[DEBUG] Double pi
[DEBUG] Integer position(STRING pattern in STRING string)
[DEBUG] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] Integer quarter(DATE arg)
[DEBUG] Double radians(NUMERIC arg)
[DEBUG] Double rand([INTEGER seed])
[DEBUG] Long rank([arg0[, ...]])
[DEBUG] String repeat(STRING string, INTEGER times)
[DEBUG] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] String reverse(STRING arg)
[DEBUG] String right(STRING string, INTEGER length)
[DEBUG] round(NUMERIC number[, INTEGER places])
[DEBUG] Long row_number()
[DEBUG] String rpad(string, length[, padding])
[DEBUG] String rtrim(STRING string[, STRING characters])
[DEBUG] Integer second(TIME arg)
[DEBUG] String sha(arg)
[DEBUG] String sha1(arg)
[DEBUG] String sha2(arg0, arg1)
[DEBUG] Integer sign(NUMERIC arg)
[DEBUG] Double sin(NUMERIC arg)
[DEBUG] Double sinh(NUMERIC arg)
[DEBUG] String soundex(arg)
[DEBUG] String space(INTEGER arg)
[DEBUG] Object sql
[DEBUG] Double sqrt(NUMERIC arg)
[DEBUG] Double stddev(NUMERIC arg)
[DEBUG] Double stddev_pop(NUMERIC arg)
[DEBUG] Double stddev_samp(NUMERIC arg)
[DEBUG] String str(arg)
[DEBUG] subdate(DATE datetime, INTEGER days)
[DEBUG] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] subtime(TIME datetime, TIME time)
[DEBUG] sum(arg)
[DEBUG] Timestamp sysdate()
[DEBUG] Double tan(NUMERIC arg)
[DEBUG] Double tanh(NUMERIC arg)
[DEBUG] String time(arg)
[DEBUG] Timestamp timestamp(arg0[, arg1])
[DEBUG] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] trunc( ... )
[DEBUG] truncate( ... )
[DEBUG] String upper(STRING string)
[DEBUG] Date utc_date
[DEBUG] Time utc_time
[DEBUG] Timestamp utc_timestamp
[DEBUG] Double var_pop(NUMERIC arg)
[DEBUG] Double var_samp(NUMERIC arg)
[DEBUG] Double variance(NUMERIC arg)
[DEBUG] Integer week(DATE arg)
[DEBUG] Integer year(DATE arg)
[DEBUG] Starting QueryInterpretationCache(2048)
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService]
[TRACE] Initializing service [role=org.hibernate.event.spi.EntityCopyObserverFactory]
[DEBUG] Configured EntityCopyObserver strategy: disallow
[TRACE] Initializing service [role=org.hibernate.sql.results.jdbc.spi.JdbcValuesMappingProducerProvider]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
[TRACE] Using standard BatchBuilder (1)
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[DEBUG] To-one property `model.Match#awayTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#awayTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#homeTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#homeTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#stadium` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#stadium` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Match]: private accessor [awayTeam]
[DEBUG] To-one property `model.Match#awayTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#homeTeam` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Match#stadium` was mapped with LAZY + NO_PROXY but the class was not enhanced
[TRACE] Skipping duplicate registration of path [awayTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [homeTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [stadium.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [awayTeam], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [awayTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [awayTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [date], existing type = [basicType@6(java.time.LocalDate,91)], incoming type = [basicType@6(java.time.LocalDate,91)]
[TRACE] Skipping duplicate registration of path [homeTeam], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [homeTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [homeTeam.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [result], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [stadium], existing type = [org.hibernate.type.ManyToOneType(model.Stadium)], incoming type = [org.hibernate.type.ManyToOneType(model.Stadium)]
[TRACE] Skipping duplicate registration of path [stadium.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [stadium.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Team]: private accessor [country]
[TRACE] Skipping duplicate registration of path [country], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [matches], existing type = [basicType@9(java.util.Set,-3)], incoming type = [basicType@9(java.util.Set,-3)]
[TRACE] Skipping duplicate registration of path [name], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [players], existing type = [org.hibernate.type.SetType(model.Team.players)], incoming type = [org.hibernate.type.SetType(model.Team.players)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Player]: private accessor [birthDate]
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [birthDate], existing type = [basicType@6(java.time.LocalDate,91)], incoming type = [basicType@6(java.time.LocalDate,91)]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [lastName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [number], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [position], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [positions], existing type = [org.hibernate.type.SetType(model.Player.positions)], incoming type = [org.hibernate.type.SetType(model.Player.positions)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [name], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [time], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Person]: private accessor [birthDate]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [birthDate], existing type = [basicType@6(java.time.LocalDate,91)], incoming type = [basicType@6(java.time.LocalDate,91)]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [lastName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [number], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [position], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [positions], existing type = [org.hibernate.type.SetType(model.Player.positions)], incoming type = [org.hibernate.type.SetType(model.Player.positions)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [name], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [time], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] Not known whether passed class name [model.Stadium] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Stadium
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Stadium]: private accessor [location]
[TRACE] Skipping duplicate registration of path [location], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [name], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] To-one property `model.Coach#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Coach#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Coach]: private accessor [birthDate]
[DEBUG] To-one property `model.Coach#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [birthDate], existing type = [basicType@6(java.time.LocalDate,91)], incoming type = [basicType@6(java.time.LocalDate,91)]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [lastName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] HHH000513: Unable to create the ReflectionOptimizer for [model.Position]: private accessor [birthDate]
[DEBUG] To-one property `model.Player#team` was mapped with LAZY + NO_PROXY but the class was not enhanced
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [birthDate], existing type = [basicType@6(java.time.LocalDate,91)], incoming type = [basicType@6(java.time.LocalDate,91)]
[TRACE] Skipping duplicate registration of path [firstName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [lastName], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [number], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [position], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [positions], existing type = [org.hibernate.type.SetType(model.Player.positions)], incoming type = [org.hibernate.type.SetType(model.Player.positions)]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [name], existing type = [basicType@7(java.lang.String,12)], incoming type = [basicType@7(java.lang.String,12)]
[TRACE] Skipping duplicate registration of path [time], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[TRACE] Skipping duplicate registration of path [id], existing type = [basicType@5(java.lang.Integer,4)], incoming type = [basicType@5(java.lang.Integer,4)]
[DEBUG] Skipping collection row updates - model.Player.positions
[DEBUG] Skipping collection (re)creation - model.Team.players
[DEBUG] Skipping collection row deletions - model.Team.players
[DEBUG] Skipping collection removals - model.Team.players
[DEBUG] Starting post-init callbacks
[DEBUG] Starting PostInitCallbackEntry : To-one key - NavigableRole[model.Match.awayTeam]
[DEBUG] Starting PostInitCallbackEntry : To-one key - NavigableRole[model.Match.homeTeam]
[DEBUG] Starting PostInitCallbackEntry : To-one key - NavigableRole[model.Match.stadium]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Match) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[model.Team.players#{element}]) - element descriptor
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping(model.Team.players)#finishInitialization
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping(model.Team.players) - key descriptor
[TRACE] #findSubPart(`team`)
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Team) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Person) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Person) `sqmMultiTableMutationStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.query.sqm.mutation.spi.SqmMultiTableMutationStrategyProvider]
[TRACE] Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: PluralAttribute(model.Player.positions)
java.lang.IllegalStateException: Not yet ready: PluralAttribute(model.Player.positions)
	at org.hibernate.dialect.temptable.TemporaryTable.lambda$createIdTable$1(TemporaryTable.java:216)
	at org.hibernate.dialect.temptable.TemporaryTable.lambda$visitPluralAttributes$3(TemporaryTable.java:262)
	at org.hibernate.metamodel.mapping.internal.ImmutableAttributeMappingsMap.forEachValue(ImmutableAttributeMappingsMap.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitDeclaredAttributeMappings(AbstractEntityPersister.java:5434)
	at org.hibernate.persister.entity.AbstractEntityPersister.visitSubTypeAttributeMappings(AbstractEntityPersister.java:6233)
	at org.hibernate.dialect.temptable.TemporaryTable.visitPluralAttributes(TemporaryTable.java:259)
	at org.hibernate.dialect.temptable.TemporaryTable.lambda$createIdTable$2(TemporaryTable.java:206)
	at org.hibernate.dialect.temptable.TemporaryTable.<init>(TemporaryTable.java:152)
	at org.hibernate.dialect.temptable.TemporaryTable.createIdTable(TemporaryTable.java:174)
	at org.hibernate.dialect.MySQLDialect.getFallbackSqmMutationStrategy(MySQLDialect.java:1098)
	at org.hibernate.query.sqm.mutation.internal.SqmMultiTableMutationStrategyProviderStandard.createMutationStrategy(SqmMultiTableMutationStrategyProviderStandard.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.interpretSqmMultiTableStrategy(AbstractEntityPersister.java:5270)
	at org.hibernate.persister.entity.AbstractEntityPersister.lambda$prepareMappingModel$13(AbstractEntityPersister.java:5077)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:246)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:106)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:88)
	at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:42)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:199)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Person) `sqmMultiTableInsertStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[model.Player.positions#{element}]) - element descriptor
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping(model.Player.positions)#finishInitialization
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping(model.Player.positions) - key descriptor
[DEBUG] Starting PostInitCallbackEntry : To-one key - NavigableRole[model.Player.team]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Player) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Player) `sqmMultiTableMutationStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Player) `sqmMultiTableInsertStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Stadium) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : To-one key - NavigableRole[model.Coach.team]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Coach) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Coach) `sqmMultiTableMutationStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Coach) `sqmMultiTableInsertStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Position) `staticFetchableList` generator
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Position) `sqmMultiTableMutationStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Position) `sqmMultiTableInsertStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[model.Team.players#{element}]) - element descriptor
[DEBUG] Starting PostInitCallbackEntry : Entity(model.Person) `sqmMultiTableMutationStrategy` interpretation
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[DEBUG] Created new SQL alias : m1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Match)] with identifierForTableGroup [model.Match] for NavigablePath [model.Match] 
[TRACE] Starting visitation of FetchParent's Fetchables : model.Match
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@39266403] with identifierForTableGroup [model.Match.awayTeam] for NavigablePath [model.Match.awayTeam] 
[DEBUG] Created new SQL alias : at1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Match.awayTeam
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@59c43561] with identifierForTableGroup [model.Match.homeTeam] for NavigablePath [model.Match.homeTeam] 
[DEBUG] Created new SQL alias : ht1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Match.homeTeam
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@634f58d2] with identifierForTableGroup [model.Match.stadium] for NavigablePath [model.Match.stadium] 
[DEBUG] Created new SQL alias : s1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Match.stadium
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Match]
 |  +-EntityFetchJoinedImpl [model.Match.awayTeam]
 |  +-BasicFetch [model.Match.date]
 |  +-EntityFetchJoinedImpl [model.Match.homeTeam]
 |  +-BasicFetch [model.Match.result]
 |  \-EntityFetchJoinedImpl [model.Match.stadium]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : model.Match) {
          primaryTableReference : MATCHES as m1_0
          TableGroupJoins {
             join LazyTableGroup (at1 : model.Match.awayTeam) {
              primaryTableReference : TEAMS as at1_0
            }
             join LazyTableGroup (ht1 : model.Match.homeTeam) {
              primaryTableReference : TEAMS as ht1_0
            }
             join LazyTableGroup (s1 : model.Match.stadium) {
              primaryTableReference : STADIUMS as s1_0
            }
          }
        }
      }
    }

[DEBUG] Static SQL for entity: model.Match
[DEBUG]  Version select: select MATCH_ID from MATCHES where MATCH_ID=?
[DEBUG]  Insert (0): insert into MATCHES (AWAY_TEAM_ID,MATCH_DATE,HOME_TEAM_ID,result,STADIUM_ID) values (?,?,?,?,?)
[DEBUG]  Update (0): update MATCHES set AWAY_TEAM_ID=?,MATCH_DATE=?,HOME_TEAM_ID=?,result=?,STADIUM_ID=? where MATCH_ID=?
[DEBUG]  Delete (0): delete from MATCHES where MATCH_ID=?
[DEBUG] Created new SQL alias : t1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Team)] with identifierForTableGroup [model.Team] for NavigablePath [model.Team] 
[TRACE] Starting visitation of FetchParent's Fetchables : model.Team
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Team]
 |  +-BasicFetch [model.Team.country]
 |  +-BasicFetch [model.Team.matches]
 |  +-BasicFetch [model.Team.name]
 |  \-DelayedCollectionFetch [model.Team.players]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : model.Team) {
          primaryTableReference : TEAMS as t1_0
        }
      }
    }

[DEBUG] Static SQL for entity: model.Team
[DEBUG]  Version select: select TEAM_ID from TEAMS where TEAM_ID=?
[DEBUG]  Insert (0): insert into TEAMS (country,matches,name) values (?,?,?)
[DEBUG]  Update (0): update TEAMS set country=?,matches=?,name=? where TEAM_ID=?
[DEBUG]  Delete (0): delete from TEAMS where TEAM_ID=?
[DEBUG] Created new SQL alias : p1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Player)] with identifierForTableGroup [model.Player] for NavigablePath [model.Player] 
[DEBUG] Created new SQL alias : p1_1
[DEBUG] Created new SQL alias : p1_2
[TRACE] Starting visitation of FetchParent's Fetchables : model.Player
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3dfd6220] with identifierForTableGroup [model.Player.team] for NavigablePath [model.Player.team] 
[DEBUG] Created new SQL alias : t1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Player.team
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Player]
 |  +-BasicFetch [model.Player.birthDate]
 |  +-BasicFetch [model.Player.firstName]
 |  +-BasicFetch [model.Player.lastName]
 |  +-BasicFetch [model.Player.number]
 |  +-BasicFetch [model.Player.position]
 |  +-DelayedCollectionFetch [model.Player.positions]
 |  +-EntityFetchJoinedImpl [model.Player.team]
 |  +-BasicFetch [treat(model.Player as #model.Position).name]
 |  \-BasicFetch [treat(model.Player as #model.Position).time]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : model.Player) {
          primaryTableReference : PLAYERS as p1_0
          TableReferenceJoins {
            left  join POSITIONS as p1_1
             join PERSONS as p1_2
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : model.Player.team) {
              primaryTableReference : TEAMS as t1_0
            }
          }
        }
      }
    }

[DEBUG] Static SQL for entity: model.Player
[DEBUG]  Version select: select PER_ID from PERSONS where PER_ID=?
[DEBUG]  Insert (0): insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)
[DEBUG]  Insert (1): insert into PLAYERS (number,position,TEAM_ID,PLAYER_ID) values (?,?,?,?)
[DEBUG]  Update (0): update PERSONS set BIRTH_DATE=?,FIRST_NAME=?,LAST_NAME=? where PER_ID=?
[DEBUG]  Update (1): update PLAYERS set number=?,position=?,TEAM_ID=? where PLAYER_ID=?
[DEBUG]  Delete (0): delete from PLAYERS where PLAYER_ID=?
[DEBUG]  Delete (1): delete from PERSONS where PER_ID=?
[DEBUG] Created new SQL alias : p1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Person)] with identifierForTableGroup [model.Person] for NavigablePath [model.Person] 
[DEBUG] Created new SQL alias : p1_1
[DEBUG] Created new SQL alias : p1_2
[DEBUG] Created new SQL alias : p1_3
[TRACE] Starting visitation of FetchParent's Fetchables : model.Person
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@afde064] with identifierForTableGroup [treat(model.Person as model.Coach).team] for NavigablePath [treat(model.Person as model.Coach).team] 
[DEBUG] Created new SQL alias : t1_0
[TRACE] Starting visitation of FetchParent's Fetchables : treat(model.Person as #model.Coach).team
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5a592c70] with identifierForTableGroup [treat(model.Person as model.Player).team] for NavigablePath [treat(model.Person as model.Player).team] 
[DEBUG] Created new SQL alias : t2_0
[TRACE] Starting visitation of FetchParent's Fetchables : treat(model.Person as #model.Player).team
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Person]
 |  +-BasicFetch [model.Person.birthDate]
 |  +-BasicFetch [model.Person.firstName]
 |  +-BasicFetch [model.Person.lastName]
 |  +-EntityFetchJoinedImpl [treat(model.Person as #model.Coach).team]
 |  +-BasicFetch [treat(model.Person as #model.Player).number]
 |  +-BasicFetch [treat(model.Person as #model.Player).position]
 |  +-DelayedCollectionFetch [treat(model.Person as #model.Player).positions]
 |  +-EntityFetchJoinedImpl [treat(model.Person as #model.Player).team]
 |  +-BasicFetch [treat(model.Person as #model.Position).name]
 |  \-BasicFetch [treat(model.Person as #model.Position).time]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : model.Person) {
          primaryTableReference : PERSONS as p1_0
          TableReferenceJoins {
            left  join POSITIONS as p1_1
            left  join PLAYERS as p1_2
            left  join COACHES as p1_3
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : treat(model.Person as #model.Coach).team) {
              primaryTableReference : TEAMS as t1_0
            }
            left  join LazyTableGroup (t2 : treat(model.Person as #model.Player).team) {
              primaryTableReference : TEAMS as t2_0
            }
          }
        }
      }
    }

[DEBUG] Static SQL for entity: model.Person
[DEBUG]  Version select: select PER_ID from PERSONS where PER_ID=?
[DEBUG]  Insert (0): insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)
[DEBUG]  Update (0): update PERSONS set BIRTH_DATE=?,FIRST_NAME=?,LAST_NAME=? where PER_ID=?
[DEBUG]  Delete (0): delete from PERSONS where PER_ID=?
[DEBUG] Created new SQL alias : s1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Stadium)] with identifierForTableGroup [model.Stadium] for NavigablePath [model.Stadium] 
[TRACE] Starting visitation of FetchParent's Fetchables : model.Stadium
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Stadium]
 |  +-BasicFetch [model.Stadium.location]
 |  \-BasicFetch [model.Stadium.name]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : model.Stadium) {
          primaryTableReference : STADIUMS as s1_0
        }
      }
    }

[DEBUG] Static SQL for entity: model.Stadium
[DEBUG]  Version select: select STADIUM_ID from STADIUMS where STADIUM_ID=?
[DEBUG]  Insert (0): insert into STADIUMS (LOCATION,NAME) values (?,?)
[DEBUG]  Update (0): update STADIUMS set LOCATION=?,NAME=? where STADIUM_ID=?
[DEBUG]  Delete (0): delete from STADIUMS where STADIUM_ID=?
[DEBUG] Created new SQL alias : c1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Coach)] with identifierForTableGroup [model.Coach] for NavigablePath [model.Coach] 
[TRACE] Starting visitation of FetchParent's Fetchables : model.Coach
[DEBUG] Created new SQL alias : c1_1
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34279b8a] with identifierForTableGroup [model.Coach.team] for NavigablePath [model.Coach.team] 
[DEBUG] Created new SQL alias : t1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Coach.team
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Coach]
 |  +-BasicFetch [model.Coach.birthDate]
 |  +-BasicFetch [model.Coach.firstName]
 |  +-BasicFetch [model.Coach.lastName]
 |  \-EntityFetchJoinedImpl [model.Coach.team]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : model.Coach) {
          primaryTableReference : COACHES as c1_0
          TableReferenceJoins {
             join PERSONS as c1_1
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : model.Coach.team) {
              primaryTableReference : TEAMS as t1_0
            }
          }
        }
      }
    }

[DEBUG] Static SQL for entity: model.Coach
[DEBUG]  Version select: select PER_ID from PERSONS where PER_ID=?
[DEBUG]  Insert (0): insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)
[DEBUG]  Insert (1): insert into COACHES (TEAM_ID,PER_ID) values (?,?)
[DEBUG]  Update (0): update PERSONS set BIRTH_DATE=?,FIRST_NAME=?,LAST_NAME=? where PER_ID=?
[DEBUG]  Update (1): update COACHES set TEAM_ID=? where PER_ID=?
[DEBUG]  Delete (0): delete from COACHES where PER_ID=?
[DEBUG]  Delete (1): delete from PERSONS where PER_ID=?
[DEBUG] Created new SQL alias : p1_0
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Position)] with identifierForTableGroup [model.Position] for NavigablePath [model.Position] 
[TRACE] Starting visitation of FetchParent's Fetchables : model.Position
[DEBUG] Created new SQL alias : p1_1
[DEBUG] Created new SQL alias : p1_2
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37c7766e] with identifierForTableGroup [model.Position.team] for NavigablePath [model.Position.team] 
[DEBUG] Created new SQL alias : t1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Position.team
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Position]
 |  +-BasicFetch [model.Position.birthDate]
 |  +-BasicFetch [model.Position.firstName]
 |  +-BasicFetch [model.Position.lastName]
 |  +-BasicFetch [model.Position.number]
 |  +-BasicFetch [model.Position.position]
 |  +-DelayedCollectionFetch [model.Position.positions]
 |  +-EntityFetchJoinedImpl [model.Position.team]
 |  +-BasicFetch [model.Position.name]
 |  \-BasicFetch [model.Position.time]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:66)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:198)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.lambda$new$0(SingleIdEntityLoaderStandardImpl.java:41)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:62)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.<init>(SingleIdEntityLoaderStandardImpl.java:38)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:883)
	at org.hibernate.persister.entity.AbstractEntityPersister.buildSingleIdEntityLoader(AbstractEntityPersister.java:872)
	at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3366)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:207)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : model.Position) {
          primaryTableReference : POSITIONS as p1_0
          TableReferenceJoins {
             join PERSONS as p1_1
             join PLAYERS as p1_2
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : model.Position.team) {
              primaryTableReference : TEAMS as t1_0
            }
          }
        }
      }
    }

[DEBUG] Static SQL for entity: model.Position
[DEBUG]  Version select: select PER_ID from PERSONS where PER_ID=?
[DEBUG]  Insert (0): insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)
[DEBUG]  Insert (1): insert into PLAYERS (number,position,TEAM_ID,PLAYER_ID) values (?,?,?,?)
[DEBUG]  Insert (2): insert into POSITIONS (name,TIME_PLAYED,POS_ID) values (?,?,?)
[DEBUG]  Update (0): update PERSONS set BIRTH_DATE=?,FIRST_NAME=?,LAST_NAME=? where PER_ID=?
[DEBUG]  Update (1): update PLAYERS set number=?,position=?,TEAM_ID=? where PLAYER_ID=?
[DEBUG]  Update (2): update POSITIONS set name=?,TIME_PLAYED=? where POS_ID=?
[DEBUG]  Delete (0): delete from POSITIONS where POS_ID=?
[DEBUG]  Delete (1): delete from PLAYERS where PLAYER_ID=?
[DEBUG]  Delete (2): delete from PERSONS where PER_ID=?
[DEBUG] Created new SQL alias : p1_0
[DEBUG] Registration of TableGroup [CollectionTableGroup(model.Player.positions)] with identifierForTableGroup [model.Player.positions] for NavigablePath [model.Player.positions] 
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@251c90f] with identifierForTableGroup [model.Player.positions.{element}] for NavigablePath [model.Player.positions.{element}] 
[DEBUG] Created new SQL alias : p1_1
[TRACE] Starting visitation of FetchParent's Fetchables : model.Player.positions.{element}
[DEBUG] Created new SQL alias : p1_2
[DEBUG] Created new SQL alias : p1_3
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64f4f12] with identifierForTableGroup [model.Player.positions.{element}.team] for NavigablePath [model.Player.positions.{element}.team] 
[DEBUG] Created new SQL alias : t1_0
[TRACE] Starting visitation of FetchParent's Fetchables : model.Player.positions.{element}.team
[DEBUG] DomainResult Graph:
 \-CollectionDomainResult [model.Player.positions]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.<init>(CollectionLoaderSingleKey.java:78)
	at org.hibernate.persister.collection.AbstractCollectionPersister.createSingleKeyCollectionLoader(AbstractCollectionPersister.java:814)
	at org.hibernate.persister.collection.AbstractCollectionPersister.createNamedQueryCollectionLoader(AbstractCollectionPersister.java:799)
	at org.hibernate.persister.collection.AbstractCollectionPersister.postInstantiate(AbstractCollectionPersister.java:642)
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:210)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        CollectionTableGroup (p1 : model.Player.positions) {
          primaryTableReference : PLAYER_POSITION as p1_0
          TableGroupJoins {
             join LazyTableGroup (p1 : model.Player.positions.{element}) {
              primaryTableReference : POSITIONS as p1_1
              TableReferenceJoins {
                 join PERSONS as p1_2
                 join PLAYERS as p1_3
              }
              TableGroupJoins {
                left  join LazyTableGroup (t1 : model.Player.positions.{element}.team) {
                  primaryTableReference : TEAMS as t1_0
                }
              }
            }
          }
        }
      }
    }

[DEBUG] Static SQL for collection: model.Player.positions
[DEBUG]  Row insert: insert into PLAYER_POSITION (PLAYER_ID,POSITION_ID) values (?,?)
[DEBUG]  Row delete: delete from PLAYER_POSITION where PLAYER_ID=? and POSITION_ID=?
[TRACE] Starting RemoveCoordinator#buildOperationGroup - model.Player.positions
[DEBUG]  One-shot delete: delete from PLAYER_POSITION where PLAYER_ID=?
[DEBUG] Created new SQL alias : p1_0
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@55877274] with identifierForTableGroup [model.Team.players] for NavigablePath [model.Team.players] 
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Team.players.{element})] with identifierForTableGroup [model.Team.players.{element}] for NavigablePath [model.Team.players.{element}] 
[DEBUG] Created new SQL alias : p1_1
[DEBUG] Created new SQL alias : p1_2
[TRACE] Starting visitation of FetchParent's Fetchables : model.Team.players.{element}
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d59e968] with identifierForTableGroup [model.Team.players.{element}.team] for NavigablePath [model.Team.players.{element}.team] 
[DEBUG] DomainResult Graph:
 \-CollectionDomainResult [model.Team.players]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.loader.ast.internal.CollectionLoaderSingleKey.<init>(CollectionLoaderSingleKey.java:78)
	at org.hibernate.persister.collection.AbstractCollectionPersister.createSingleKeyCollectionLoader(AbstractCollectionPersister.java:814)
	at org.hibernate.persister.collection.AbstractCollectionPersister.createNamedQueryCollectionLoader(AbstractCollectionPersister.java:799)
	at org.hibernate.persister.collection.AbstractCollectionPersister.postInstantiate(AbstractCollectionPersister.java:642)
	at java.base/java.util.concurrent.ConcurrentHashMap$ValuesView.forEach(ConcurrentHashMap.java:4780)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:210)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:371)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:300)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : model.Team.players) {
          primaryTableReference : PLAYERS as p1_0
          TableReferenceJoins {
            left  join POSITIONS as p1_1
             join PERSONS as p1_2
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : model.Team.players.{element}.team) {
            }
          }
        }
      }
    }

[DEBUG] Created new SQL alias : t1_0
[DEBUG] Static SQL for collection: model.Team.players
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model.Match]
[TRACE] Building identifier attribute [model.Match.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Match.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Match.awayTeam]
[TRACE] Starting attribute metadata determination [awayTeam]
[TRACE]     Determined member [private model.Team model.Match.awayTeam]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Match.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [private java.time.LocalDate model.Match.date]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Match.homeTeam]
[TRACE] Starting attribute metadata determination [homeTeam]
[TRACE]     Determined member [private model.Team model.Match.homeTeam]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Match.result]
[TRACE] Starting attribute metadata determination [result]
[TRACE]     Determined member [private java.lang.String model.Match.result]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Match.stadium]
[TRACE] Starting attribute metadata determination [stadium]
[TRACE]     Determined member [private model.Stadium model.Match.stadium]
[TRACE]     Determined type [name=model.Stadium, class=org.hibernate.type.ManyToOneType]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Match]
[TRACE] Starting entity [model.Team]
[TRACE] Building identifier attribute [model.Team.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Team.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Team.country]
[TRACE] Starting attribute metadata determination [country]
[TRACE]     Determined member [private java.lang.String model.Team.country]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Team.matches]
[TRACE] Starting attribute metadata determination [matches]
[TRACE]     Determined member [private java.util.Set model.Team.matches]
[TRACE]     Determined type [name=basicType@9(java.util.Set,-3), class=org.hibernate.type.internal.BasicTypeImpl]
[TRACE] Building attribute [model.Team.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Team.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Team.players]
[TRACE] Starting attribute metadata determination [players]
[TRACE]     Determined member [private java.util.Set model.Team.players]
[TRACE]     Determined type [name=java.util.Set(model.Team.players), class=org.hibernate.type.SetType]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Team]
[TRACE] Starting entity [model.Person]
[TRACE] Building identifier attribute [model.Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Person.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Person.birthDate]
[TRACE] Starting attribute metadata determination [birthDate]
[TRACE]     Determined member [private java.time.LocalDate model.Person.birthDate]
[TRACE]     Determined type [name=LocalDate, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Person.firstName]
[TRACE] Starting attribute metadata determination [firstName]
[TRACE]     Determined member [private java.lang.String model.Person.firstName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Person.lastName]
[TRACE] Starting attribute metadata determination [lastName]
[TRACE]     Determined member [private java.lang.String model.Person.lastName]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Person]
[TRACE] Starting entity [model.Player]
[TRACE] Building attribute [model.Player.number]
[TRACE] Starting attribute metadata determination [number]
[TRACE]     Determined member [private int model.Player.number]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Player.position]
[TRACE] Starting attribute metadata determination [position]
[TRACE]     Determined member [private java.lang.String model.Player.position]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Player.positions]
[TRACE] Starting attribute metadata determination [positions]
[TRACE]     Determined member [private java.util.Set model.Player.positions]
[TRACE]     Determined type [name=java.util.Set(model.Player.positions), class=org.hibernate.type.SetType]
[TRACE] Building attribute [model.Player.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [private model.Team model.Player.team]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Player]
[TRACE] Starting entity [model.Stadium]
[TRACE] Building identifier attribute [model.Stadium.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Stadium.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Stadium.location]
[TRACE] Starting attribute metadata determination [location]
[TRACE]     Determined member [private java.lang.String model.Stadium.location]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Stadium.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Stadium.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Stadium]
[TRACE] Starting entity [model.Coach]
[TRACE] Building attribute [model.Coach.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [private model.Team model.Coach.team]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Coach]
[TRACE] Starting entity [model.Position]
[TRACE] Building attribute [model.Position.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Position.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Building attribute [model.Position.time]
[TRACE] Starting attribute metadata determination [time]
[TRACE]     Determined member [private int model.Position.time]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.internal.NamedBasicTypeImpl]
[TRACE] Interpreting domain-model identifier descriptor
[TRACE] Completed entity [model.Position]
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform]
[DEBUG] No JtaPlatform was specified, checking resolver
[TRACE] Initializing service [role=org.hibernate.engine.transaction.jta.platform.spi.JtaPlatformResolver]
[DEBUG] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SqlScriptCommandExtractor]
[TRACE] Normalizing identifier quoting [null]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2a99ca99] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists PERSONS" via JDBC [Cannot drop table 'persons' referenced by a foreign key constraint 'FK52jl1gm69bny8e9yyu60labkd' on table 'children'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists PERSONS" via JDBC [Cannot drop table 'persons' referenced by a foreign key constraint 'FK52jl1gm69bny8e9yyu60labkd' on table 'children'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
Caused by: java.sql.SQLException: Cannot drop table 'persons' referenced by a foreign key constraint 'FK52jl1gm69bny8e9yyu60labkd' on table 'children'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:75)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 20 more
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]
[TRACE] Normalizing identifier quoting [null]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3b57dba4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL "
    create table PERSONS (
        BIRTH_DATE date,
        PER_ID integer not null auto_increment,
        FIRST_NAME varchar(255) not null,
        LAST_NAME varchar(255) not null,
        primary key (PER_ID)
    ) engine=InnoDB" via JDBC [Table 'persons' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table PERSONS (
        BIRTH_DATE date,
        PER_ID integer not null auto_increment,
        FIRST_NAME varchar(255) not null,
        LAST_NAME varchar(255) not null,
        primary key (PER_ID)
    ) engine=InnoDB" via JDBC [Table 'persons' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:90)
	at hiberApp.MainAppInit.<clinit>(MainAppInit.java:26)
Caused by: java.sql.SQLSyntaxErrorException: Table 'persons' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:75)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 20 more
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70fede7d
[DEBUG] Registering SessionFactory: 53cb088b-b32e-421f-9513-14ffb224f13b (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] Instantiated SessionFactory
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Opened Session [7bd8a338-588e-42b0-9a7f-c9148db3cd64] at timestamp: 1732128553240
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Person
[TRACE] Saving transient instance
[TRACE] Saving [model.Person#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Person] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Person#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Person#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10131289 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (** NOT SPECIFIED **,** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] Registering result set [null]
[TRACE] binding parameter (1:DATE) <- [null]
[TRACE] binding parameter (2:VARCHAR) <- [John]
[TRACE] binding parameter (3:VARCHAR) <- [Doe]
[DEBUG] could not execute statement [insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)]
java.sql.SQLSyntaxErrorException: Unknown column 'BIRTH_DATE' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:410)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:47)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:391)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at hiberApp.DataLoad.createData(DataLoad.java:38)
	at hiberApp.MainAppInit.main(MainAppInit.java:32)
[WARN ] SQL Error: 1054, SQLState: 42S22
[ERROR] Unknown column 'BIRTH_DATE' in 'field list'
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10131289 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (NULL,'John','Doe')]]
[TRACE] Closing result set [null]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@10131289 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (NULL,'John','Doe')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:512)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:763)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at hiberApp.DataLoad.createData(DataLoad.java:38)
	at hiberApp.MainAppInit.main(MainAppInit.java:32)
[DEBUG] rolling back
[TRACE] Preparing to rollback transaction via JDBC Connection.rollback()
[TRACE] Transaction rolled-back via JDBC Connection.rollback()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(false)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(5)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=false, delayed=false)
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Team
[TRACE] Saving transient instance
[TRACE] Saving [model.Team#<null>]
[TRACE] Wrapped collection in role: model.Team.players
[TRACE] Adding an EntityIdentityInsertAction for [model.Team] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ae924f1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values (** NOT SPECIFIED **,** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] Registering result set [null]
[TRACE] binding parameter (1:VARCHAR) <- [Spain]
[TRACE] binding parameter (2:VARBINARY) <- [[]]
[TRACE] Starting serialization of object [[]]
[TRACE] binding parameter (3:VARCHAR) <- [FC Barcelona]
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@55c50f52 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@36ad5f2a]]
[DEBUG] Initializer list is empty
[TRACE] StandardRowReader#readRow
[DEBUG] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@8077c97
[TRACE] extracted value (1:INTEGER) -> [1]
[DEBUG] Extracted JDBC value [0] - [1]
[TRACE] StandardRowReader#afterRow
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@55c50f52 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@36ad5f2a]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@55c50f52 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@36ad5f2a]]
[TRACE] Initializing non-lazy collections
[DEBUG] Extracted generated values [model.Team]: [Ljava.lang.Object;@25e8e59
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@55c50f52 [wrapping: null]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@55c50f52 [wrapping: null]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ae924f1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values ('Spain',x'aced0005737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a6578700000000077040000000078','FC Barcelona')]]
[TRACE] Closing result set [null]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1ae924f1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values ('Spain',x'aced0005737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a6578700000000077040000000078','FC Barcelona')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Team
[TRACE] Saving transient instance
[TRACE] Saving [model.Team#<null>]
[TRACE] Wrapped collection in role: model.Team.players
[TRACE] Adding an EntityIdentityInsertAction for [model.Team] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43e8f1c [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values (** NOT SPECIFIED **,** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] Registering result set [null]
[TRACE] binding parameter (1:VARCHAR) <- [Germany]
[TRACE] binding parameter (2:VARBINARY) <- [[]]
[TRACE] Starting serialization of object [[]]
[TRACE] binding parameter (3:VARCHAR) <- [Bayern Munich]
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@610fbe1c [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@675ec28b]]
[DEBUG] Initializer list is empty
[TRACE] StandardRowReader#readRow
[DEBUG] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@46d0f89c
[TRACE] extracted value (1:INTEGER) -> [2]
[DEBUG] Extracted JDBC value [0] - [2]
[TRACE] StandardRowReader#afterRow
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@610fbe1c [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@675ec28b]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@610fbe1c [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@675ec28b]]
[TRACE] Initializing non-lazy collections
[DEBUG] Extracted generated values [model.Team]: [Ljava.lang.Object;@570b2057
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@610fbe1c [wrapping: null]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@610fbe1c [wrapping: null]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43e8f1c [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values ('Germany',x'aced0005737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a6578700000000077040000000078','Bayern Munich')]]
[TRACE] Closing result set [null]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43e8f1c [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into TEAMS (country,matches,name) values ('Germany',x'aced0005737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a6578700000000077040000000078','Bayern Munich')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Stadium
[TRACE] Saving transient instance
[TRACE] Saving [model.Stadium#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Stadium] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Stadium#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Stadium#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@58164e9a [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values (** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] Registering result set [null]
[TRACE] binding parameter (1:VARCHAR) <- [Barcelona]
[TRACE] binding parameter (2:VARCHAR) <- [Camp Nou]
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@1c6e3ff9 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@11bfffb3]]
[DEBUG] Initializer list is empty
[TRACE] StandardRowReader#readRow
[DEBUG] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@76e6c070
[TRACE] extracted value (1:INTEGER) -> [1]
[DEBUG] Extracted JDBC value [0] - [1]
[TRACE] StandardRowReader#afterRow
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@1c6e3ff9 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@11bfffb3]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@1c6e3ff9 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@11bfffb3]]
[TRACE] Initializing non-lazy collections
[DEBUG] Extracted generated values [model.Stadium]: [Ljava.lang.Object;@184afb78
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@1c6e3ff9 [wrapping: null]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@1c6e3ff9 [wrapping: null]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@58164e9a [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values ('Barcelona','Camp Nou')]]
[TRACE] Closing result set [null]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@58164e9a [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values ('Barcelona','Camp Nou')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Stadium
[TRACE] Saving transient instance
[TRACE] Saving [model.Stadium#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Stadium] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Stadium#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Stadium#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4ebd6fd6 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values (** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] Registering result set [null]
[TRACE] binding parameter (1:VARCHAR) <- [Munich]
[TRACE] binding parameter (2:VARCHAR) <- [Allianz Arena]
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@615e83ac [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@5e5a8718]]
[DEBUG] Initializer list is empty
[TRACE] StandardRowReader#readRow
[DEBUG] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4438938e
[TRACE] extracted value (1:INTEGER) -> [2]
[DEBUG] Extracted JDBC value [0] - [2]
[TRACE] StandardRowReader#afterRow
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@615e83ac [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@5e5a8718]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@615e83ac [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@5e5a8718]]
[TRACE] Initializing non-lazy collections
[DEBUG] Extracted generated values [model.Stadium]: [Ljava.lang.Object;@4e50ae56
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@615e83ac [wrapping: null]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@615e83ac [wrapping: null]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4ebd6fd6 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values ('Munich','Allianz Arena')]]
[TRACE] Closing result set [null]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4ebd6fd6 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into STADIUMS (LOCATION,NAME) values ('Munich','Allianz Arena')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Coach
[TRACE] Saving transient instance
[TRACE] Saving [model.Coach#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Coach] object
[TRACE] Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Coach#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Coach#<null>]]
[TRACE] Executing insertions before resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6775c0d1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (** NOT SPECIFIED **,** NOT SPECIFIED **,** NOT SPECIFIED **)]]
[TRACE] binding parameter (1:DATE) <- [null]
[TRACE] binding parameter (2:VARCHAR) <- [Pep]
[TRACE] binding parameter (3:VARCHAR) <- [Guardiola]
[DEBUG] could not execute statement [insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (?,?,?)]
java.sql.SQLSyntaxErrorException: Unknown column 'BIRTH_DATE' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:410)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performMutation(GetGeneratedKeysDelegate.java:116)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorStandard.performNonBatchedOperations(MutationExecutorStandard.java:233)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:55)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.doStaticInserts(InsertCoordinatorStandard.java:194)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.coordinateInsert(InsertCoordinatorStandard.java:132)
	at org.hibernate.persister.entity.mutation.InsertCoordinatorStandard.insert(InsertCoordinatorStandard.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:85)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:391)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:305)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:224)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:137)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:757)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at hiberApp.DataLoad.createData(DataLoad.java:71)
	at hiberApp.MainAppInit.main(MainAppInit.java:32)
[WARN ] SQL Error: 1054, SQLState: 42S22
[ERROR] Unknown column 'BIRTH_DATE' in 'field list'
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6775c0d1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (NULL,'Pep','Guardiola')]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6775c0d1 [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: insert into PERSONS (BIRTH_DATE,FIRST_NAME,LAST_NAME) values (NULL,'Pep','Guardiola')]]
[TRACE] Starting after statement execution processing [AFTER_TRANSACTION]
[DEBUG] JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:512)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:763)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:741)
	at hiberApp.DataLoad.createData(DataLoad.java:71)
	at hiberApp.MainAppInit.main(MainAppInit.java:32)
[TRACE] Closing session [7bd8a338-588e-42b0-9a7f-c9148db3cd64]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@74500e4f]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Releasing JDBC resources
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null
[TRACE] Opened Session [cd0997bf-d098-4f12-b075-03623ba9b3e1] at timestamp: 1732128553403
[TRACE] QueryPlan#resolveHqlInterpretation( `SELECT o FROM java.lang.Object o` )
[DEBUG] HQL : SELECT o FROM java.lang.Object o
[DEBUG] Encountered use of reserved word as identifier : o
[TRACE] SqmProcessingIndex#register(SqmPath) : java.lang.Object(o)
[TRACE] BasicDotIdentifierHandler#consumeIdentifier( o, true, true ) - o
[TRACE] BaseLocalSequencePart#consumeIdentifier( o, true, true ) - o
[DEBUG] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `java.lang.Object(o)`
            <- [root] - `java.lang.Object(o)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `java.lang.Object(o)`
          <- [root] - `java.lang.Object(o)`
        <- [from]
      <- [query-spec]
    <- [select]

[TRACE] QueryPlan#getSelectQueryPlan(org.hibernate.query.sqm.internal.SqmInterpretationsKey@b14ed283)
[TRACE] Resolving SqmRoot [model.Match as o] to TableGroup
[TRACE] Resolving SqmRoot [model.Match as o] to TableGroup
[DEBUG] Created new SQL alias : m1_0
[TRACE] Resolved SqmRoot [model.Match as o] to new TableGroup [StandardTableGroup(model.Match(o))]
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Match(o))] with identifierForTableGroup [model.Match] for NavigablePath [model.Match] 
[TRACE] Visiting explicit joins for `model.Match(o)`
[TRACE] SqmRoot [model.Match as o] resolved to existing TableGroup [StandardTableGroup(model.Match(o))]
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@54e0f76f] with identifierForTableGroup [model.Match.awayTeam] for NavigablePath [model.Match.awayTeam] 
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@18811c42] with identifierForTableGroup [model.Match.homeTeam] for NavigablePath [model.Match.homeTeam] 
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@627acb38] with identifierForTableGroup [model.Match.stadium] for NavigablePath [model.Match.stadium] 
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Match(o)]
 |  +-EntityFetchSelectImpl [model.Match(o).awayTeam]
 |  +-BasicFetch [model.Match(o).date]
 |  +-EntityFetchSelectImpl [model.Match(o).homeTeam]
 |  +-BasicFetch [model.Match(o).result]
 |  \-EntityFetchSelectImpl [model.Match(o).stadium]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:450)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:328)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)
	at org.hibernate.query.sqm.internal.AggregatedSelectQueryPlanImpl.performList(AggregatedSelectQueryPlanImpl.java:47)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at hiberApp.DataQueries.showAll(DataQueries.java:73)
	at hiberApp.MainAppInit.main(MainAppInit.java:36)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : model.Match(o)) {
          primaryTableReference : MATCHES as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (at1 : model.Match(o).awayTeam) {
            }
            left  join LazyTableGroup (ht1 : model.Match(o).homeTeam) {
            }
            left  join LazyTableGroup (s1 : model.Match(o).stadium) {
            }
          }
        }
      }
    }

[DEBUG] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[TRACE] Registering initializer : EntitySelectFetchInitializer(model.Match(o).awayTeam)
[TRACE] Registering initializer : EntitySelectFetchInitializer(model.Match(o).homeTeam)
[TRACE] Registering initializer : EntitySelectFetchInitializer(model.Match(o).stadium)
[TRACE] Registering initializer : EntityResultInitializer(model.Match(o))
[DEBUG] Initializer list:
	  model.Match(o).homeTeam -> EntitySelectFetchInitializer(model.Match(o).homeTeam)@1146116328 (ToOneAttributeMapping(NavigableRole[model.Match.homeTeam])@1565881543)
	  model.Match(o).stadium -> EntitySelectFetchInitializer(model.Match(o).stadium)@1517972788 (ToOneAttributeMapping(NavigableRole[model.Match.stadium])@914824856)
	  model.Match(o).awayTeam -> EntitySelectFetchInitializer(model.Match(o).awayTeam)@1893107640 (ToOneAttributeMapping(NavigableRole[model.Match.awayTeam])@106116649)
	  model.Match(o) -> EntityResultInitializer(model.Match(o))@256501786 (SingleTableEntityPersister(model.Match))

[TRACE] Executing query to retrieve ResultSet : select m1_0.MATCH_ID,m1_0.AWAY_TEAM_ID,m1_0.MATCH_DATE,m1_0.HOME_TEAM_ID,m1_0.result,m1_0.STADIUM_ID from MATCHES m1_0
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6697f3d [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select m1_0.MATCH_ID,m1_0.AWAY_TEAM_ID,m1_0.MATCH_DATE,m1_0.HOME_TEAM_ID,m1_0.result,m1_0.STADIUM_ID from MATCHES m1_0]]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6697f3d [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select m1_0.MATCH_ID,m1_0.AWAY_TEAM_ID,m1_0.MATCH_DATE,m1_0.HOME_TEAM_ID,m1_0.result,m1_0.STADIUM_ID from MATCHES m1_0]]
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@47ef5a33 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@42401b81]]
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@47ef5a33 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@42401b81]]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@47ef5a33 [wrapping: com.mysql.cj.jdbc.result.ResultSetImpl@42401b81]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6697f3d [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select m1_0.MATCH_ID,m1_0.AWAY_TEAM_ID,m1_0.MATCH_DATE,m1_0.HOME_TEAM_ID,m1_0.result,m1_0.STADIUM_ID from MATCHES m1_0]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6697f3d [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select m1_0.MATCH_ID,m1_0.AWAY_TEAM_ID,m1_0.MATCH_DATE,m1_0.HOME_TEAM_ID,m1_0.result,m1_0.STADIUM_ID from MATCHES m1_0]]
[TRACE] LogicalConnection#afterStatement
[TRACE] Initializing non-lazy collections
[TRACE] Resolving SqmRoot [model.Person as o] to TableGroup
[TRACE] Resolving SqmRoot [model.Person as o] to TableGroup
[DEBUG] Created new SQL alias : p1_0
[TRACE] Resolved SqmRoot [model.Person as o] to new TableGroup [StandardTableGroup(model.Person(o))]
[DEBUG] Registration of TableGroup [StandardTableGroup(model.Person(o))] with identifierForTableGroup [model.Person] for NavigablePath [model.Person] 
[TRACE] Visiting explicit joins for `model.Person(o)`
[DEBUG] Created new SQL alias : p1_1
[DEBUG] Created new SQL alias : p1_2
[DEBUG] Created new SQL alias : p1_3
[TRACE] SqmRoot [model.Person as o] resolved to existing TableGroup [StandardTableGroup(model.Person(o))]
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1c8f71a7] with identifierForTableGroup [treat(model.Person(o) as model.Coach).team] for NavigablePath [treat(model.Person(o) as model.Coach).team] 
[DEBUG] Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27e21083] with identifierForTableGroup [treat(model.Person(o) as model.Player).team] for NavigablePath [treat(model.Person(o) as model.Player).team] 
[DEBUG] DomainResult Graph:
 \-EntityResultImpl [model.Person(o)]
 |  +-BasicFetch [model.Person(o).birthDate]
 |  +-BasicFetch [model.Person(o).firstName]
 |  +-BasicFetch [model.Person(o).lastName]
 |  +-EntityFetchSelectImpl [treat(model.Person(o) as #model.Coach).team]
 |  +-BasicFetch [treat(model.Person(o) as #model.Player).number]
 |  +-BasicFetch [treat(model.Person(o) as #model.Player).position]
 |  +-DelayedCollectionFetch [treat(model.Person(o) as #model.Player).positions]
 |  +-CircularFetchImpl [treat(model.Person(o) as #model.Player).team]
 |  +-BasicFetch [treat(model.Person(o) as #model.Position).name]
 |  \-BasicFetch [treat(model.Person(o) as #model.Position).time]

[TRACE] Stack trace calling DomainResultGraphPrinter
java.lang.Exception
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:70)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)
	at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:871)
	at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:809)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.buildCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:450)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:328)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)
	at org.hibernate.query.sqm.internal.AggregatedSelectQueryPlanImpl.performList(AggregatedSelectQueryPlanImpl.java:47)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at hiberApp.DataQueries.showAll(DataQueries.java:73)
	at hiberApp.MainAppInit.main(MainAppInit.java:36)
[DEBUG] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : model.Person(o)) {
          primaryTableReference : PERSONS as p1_0
          TableReferenceJoins {
            left  join COACHES as p1_1
            left  join PLAYERS as p1_2
            left  join POSITIONS as p1_3
          }
          TableGroupJoins {
            left  join LazyTableGroup (t1 : treat(model.Person(o) as #model.Coach).team) {
            }
            left  join LazyTableGroup (t2 : treat(model.Person(o) as #model.Player).team) {
            }
          }
        }
      }
    }

[DEBUG] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[TRACE] Registering initializer : EntitySelectFetchInitializer(treat(model.Person(o) as #model.Coach).team)
[TRACE] Registering initializer : DelayedCollectionInitializer(treat(model.Person(o) as #model.Player).positions)
[TRACE] Registering initializer : EntitySelectFetchInitializer(treat(model.Person(o) as #model.Player).team)
[TRACE] Registering initializer : EntityResultInitializer(model.Person(o))
[DEBUG] Initializer list:
	  treat(model.Person(o) as #model.Coach).team -> EntitySelectFetchInitializer(treat(model.Person(o) as #model.Coach).team)@72623296 (ToOneAttributeMapping(NavigableRole[model.Coach.team])@581841594)
	  treat(model.Person(o) as #model.Player).team -> EntitySelectFetchInitializer(treat(model.Person(o) as #model.Player).team)@193667460 (ToOneAttributeMapping(NavigableRole[model.Player.team])@697975769)
	  model.Person(o) -> EntityResultInitializer(model.Person(o))@214761486 (JoinedSubclassEntityPersister(model.Person))
	  treat(model.Person(o) as #model.Player).positions -> DelayedCollectionInitializer(treat(model.Person(o) as #model.Player).positions)@1604700367 (PluralAttribute(model.Player.positions))

[TRACE] Executing query to retrieve ResultSet : select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12a6e8ed [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID]]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12a6e8ed [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID]]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12a6e8ed [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID]]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@12a6e8ed [wrapping: com.mysql.cj.jdbc.ClientPreparedStatement: select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID]]
[TRACE] LogicalConnection#afterStatement
[DEBUG] JDBC exception executing SQL [select p1_0.PER_ID,case when p1_3.POS_ID is not null then 3 when p1_2.PLAYER_ID is not null then 1 when p1_1.PER_ID is not null then 2 when p1_0.PER_ID is not null then 0 end,p1_0.BIRTH_DATE,p1_0.FIRST_NAME,p1_0.LAST_NAME,p1_1.TEAM_ID,p1_2.number,p1_2.position,p1_2.TEAM_ID,p1_3.name,p1_3.TIME_PLAYED from PERSONS p1_0 left join COACHES p1_1 on p1_0.PER_ID=p1_1.PER_ID left join PLAYERS p1_2 on p1_0.PER_ID=p1_2.PLAYER_ID left join POSITIONS p1_3 on p1_0.PER_ID=p1_3.POS_ID] [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'p1_0.BIRTH_DATE' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:972)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:204)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:139)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:382)
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:302)
	at org.hibernate.query.sqm.internal.AggregatedSelectQueryPlanImpl.performList(AggregatedSelectQueryPlanImpl.java:47)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:526)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:423)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at hiberApp.DataQueries.showAll(DataQueries.java:73)
	at hiberApp.MainAppInit.main(MainAppInit.java:36)
[WARN ] SQL Error: 1054, SQLState: 42S22
[ERROR] Unknown column 'p1_0.BIRTH_DATE' in 'field list'
[TRACE] LogicalConnection#afterStatement
[TRACE] Initializing non-lazy collections
[DEBUG] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Closing session [cd0997bf-d098-4f12-b075-03623ba9b3e1]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6c66ddab]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
